[
    {
        "id": "2de9a494ac1d6c71",
        "type": "tab",
        "label": "HVAC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7d41aab9fd0b6a3e",
        "type": "tab",
        "label": "ESP32",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "13aa577370e4c4d7",
        "type": "tab",
        "label": "Logs/Notifications",
        "disabled": false,
        "info": ""
    },
    {
        "id": "536b0e9eda614fd2",
        "type": "tab",
        "label": "Zigbee",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "05e865126427c1f9",
        "type": "tab",
        "label": "Motion",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "67e1c6f6bd2fab57",
        "type": "tab",
        "label": "Sunrise/Sunset",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7ceb1d8.f3afee4",
        "type": "tab",
        "label": "Lights",
        "disabled": true,
        "info": ""
    },
    {
        "id": "bd3b7721fd58430a",
        "type": "tab",
        "label": "PIR/Motion",
        "disabled": true,
        "info": ""
    },
    {
        "id": "4289ddd18011b400",
        "type": "tab",
        "label": "Dogo",
        "disabled": true,
        "info": ""
    },
    {
        "id": "fd418eb5a2d37315",
        "type": "junction",
        "z": "7d41aab9fd0b6a3e",
        "x": 300,
        "y": 320,
        "wires": [
            [
                "f648133e35429919",
                "8521a26270a7f5ed",
                "d2f287de8e2b7bdb",
                "b7b0b4d5c552d29a",
                "0450c2ce91a72b78",
                "dfc52bfc266069f0",
                "6762d86fa674744b",
                "b2a67d17df0195f8",
                "31ccd8e9f0a2e09e",
                "917568c1def8a578"
            ]
        ]
    },
    {
        "id": "80206ddcbd9d94f1",
        "type": "junction",
        "z": "7d41aab9fd0b6a3e",
        "x": 680,
        "y": 320,
        "wires": [
            [
                "6af1216eb7c5c03f"
            ]
        ]
    },
    {
        "id": "841b001db8f4d3d5",
        "type": "junction",
        "z": "7d41aab9fd0b6a3e",
        "x": 980,
        "y": 620,
        "wires": [
            [
                "645b5b8f07f055fc",
                "dc8db494b158e485",
                "7426cbb773e5162c",
                "efac8720a10238d0",
                "6b14f65c73a0bf69",
                "ba592d172f57dd43",
                "a3dbdc255ebe8243"
            ]
        ]
    },
    {
        "id": "af0b3ee1164dc74c",
        "type": "junction",
        "z": "7d41aab9fd0b6a3e",
        "x": 980,
        "y": 260,
        "wires": [
            [
                "1eeea8ddfe40852e",
                "144549cc6dc7cbe7",
                "8714fba0422dd9f9",
                "c78d7adf71b71c07",
                "6ebdf6901c3c44a1",
                "177b7b13cf11baf0"
            ]
        ]
    },
    {
        "id": "3d478a662ee44292",
        "type": "junction",
        "z": "13aa577370e4c4d7",
        "x": 180,
        "y": 380,
        "wires": [
            [
                "b7e650722bc17863",
                "5b83184da40ca65f",
                "357104d13b31bb08"
            ]
        ]
    },
    {
        "id": "f1e538c1.0315f8",
        "type": "noraf-config",
        "name": "NORA",
        "group": "seceani",
        "twofactor": "off",
        "twofactorpin": "",
        "localexecution": true,
        "structure": "Seceani",
        "storeStateInContext": true,
        "disableValidationErrors": false,
        "sendDeviceNameAndLocation": false
    },
    {
        "id": "f569d34c.8c7ed",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "node-red",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "3302889fa9b7cb44",
        "type": "noraf-config",
        "name": "NORA - test",
        "group": "test",
        "twofactor": "off",
        "twofactorpin": "",
        "localexecution": true,
        "structure": "",
        "storeStateInContext": true,
        "disableValidationErrors": false,
        "sendDeviceNameAndLocation": false
    },
    {
        "id": "89e46ce21c7f5128",
        "type": "nibe-config",
        "name": "nibe config",
        "address": "tcp://192.168.68.24:502",
        "registerFile": ""
    },
    {
        "id": "651eb38aa48c6e2a",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "",
        "register": "Humidity (AZ30-BM20)",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 160,
        "y": 60,
        "wires": [
            [
                "1895125bc221a5c6"
            ]
        ]
    },
    {
        "id": "ed13633a52b01660",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "",
        "register": "Increased ventilation 1",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": true,
        "topic": "ventilation-boost",
        "filter": true,
        "x": 240,
        "y": 220,
        "wires": [
            [
                "1cd1125ce32c5aca"
            ]
        ]
    },
    {
        "id": "27d499b6a6e0d7e5",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "",
        "register": "Bypass during heating (ERS 1)",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 570,
        "y": 60,
        "wires": [
            [
                "639e21cb7adb71ba"
            ]
        ]
    },
    {
        "id": "719187bb860811ae",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "Fan speed (AZ30-GQ3)",
        "register": "40136",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 590,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "975b4952ce9a0378",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "Fan speed (AZ30-GQ2)",
        "register": "40135",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 590,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "4b7ea65a94ecfaf3",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "Living setpoint",
        "register": "id:12802",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 960,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "8a2d91b19d4ef994",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "Bedroom setpoint",
        "register": "id:12803",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 970,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "aa438942649ecf58",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "Living temp.",
        "register": "Roomsensor 2-1",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 1170,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "e12aab3001f9c07c",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "Bedroom temp.",
        "register": "Roomsensor 3-1",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 1180,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "59d2b8582a86cef6",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "",
        "register": "Priority",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 940,
        "y": 420,
        "wires": [
            [
                "649a67b05469e039"
            ]
        ]
    },
    {
        "id": "649a67b05469e039",
        "type": "function",
        "z": "2de9a494ac1d6c71",
        "name": "Priority",
        "func": "const map = {\n    '10': 'off',\n    '20': 'hotwater',\n    '30': 'heat',\n    '40': 'pool',\n    '60': 'cooling',\n};\n\nnode.status({ fill: \"blue\", shape: \"dot\", text: map[msg.payload.value] });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "ab2ab1c68494a0de",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "",
        "register": "Current hot water mode",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": false,
        "topic": "",
        "filter": false,
        "x": 990,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "99b78cb07dd4c043",
        "type": "nibe-register",
        "z": "2de9a494ac1d6c71",
        "name": "More hot water",
        "register": "30697",
        "nibe": "89e46ce21c7f5128",
        "interval": "5",
        "timeout": "3",
        "force": true,
        "topic": "more-hot-water",
        "filter": true,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "1cd1125ce32c5aca"
            ]
        ]
    },
    {
        "id": "1895125bc221a5c6",
        "type": "function",
        "z": "2de9a494ac1d6c71",
        "name": "decide",
        "func": "const stopRecovery = flow.get('bypass_recovery') === 1;\nconst humidity = msg.payload.value;\nconst trigger = 55;\nconst histerezis = 3;\nconst compareTo = trigger + (stopRecovery ? -1 : 1) * histerezis;\nconst shouldStopRecovery = humidity >= compareTo;\n\nnode.status({\n    fill: shouldStopRecovery ? 'red' : \"blue\",\n    shape: \"dot\",\n    text: `recovery ${shouldStopRecovery ? 'off' : 'on'}`,\n});\n\nreturn {\n    payload: shouldStopRecovery ? 1 : 0,\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [
            [
                "27d499b6a6e0d7e5"
            ]
        ]
    },
    {
        "id": "639e21cb7adb71ba",
        "type": "change",
        "z": "2de9a494ac1d6c71",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bypass_recovery",
                "pt": "flow",
                "to": "payload.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b4f19b227252fe50",
        "type": "inject",
        "z": "2de9a494ac1d6c71",
        "name": "on",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 326.1999816894531,
        "y": 128.1999969482422,
        "wires": [
            [
                "27d499b6a6e0d7e5"
            ]
        ]
    },
    {
        "id": "696ea15c4918cf37",
        "type": "inject",
        "z": "2de9a494ac1d6c71",
        "name": "off",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 326.1999816894531,
        "y": 168.1999969482422,
        "wires": [
            [
                "27d499b6a6e0d7e5"
            ]
        ]
    },
    {
        "id": "46b0b3fc4d086f1e",
        "type": "noraf-switch",
        "z": "2de9a494ac1d6c71",
        "devicename": "Ventilation Boost",
        "roomhint": "Service Room",
        "name": "",
        "passthru": false,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ventilation-boost",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": true,
        "asyncCmd": false,
        "outputs": 1,
        "x": 610,
        "y": 220,
        "wires": [
            [
                "660188df0186d9af"
            ]
        ]
    },
    {
        "id": "1cd1125ce32c5aca",
        "type": "function",
        "z": "2de9a494ac1d6c71",
        "name": "map",
        "func": "return {\n    payload: msg.payload.value,\n    topic: msg.topic,\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 260,
        "wires": [
            [
                "46b0b3fc4d086f1e",
                "f07580f20f9c8e5f"
            ]
        ]
    },
    {
        "id": "8b223dbf7927d67d",
        "type": "noraf-thermostat",
        "z": "2de9a494ac1d6c71",
        "d": true,
        "devicename": "Living Room",
        "roomhint": "Living Room",
        "name": "",
        "modes": "off,heat,on",
        "unit": "C",
        "rangeMin": "",
        "rangeMax": "",
        "topic": "",
        "passthru": false,
        "commandOnly": false,
        "queryOnly": false,
        "bufferRangeCelsius": 2,
        "nora": "f1e538c1.0315f8",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": false,
        "x": 950,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "f07580f20f9c8e5f",
        "type": "noraf-switch",
        "z": "2de9a494ac1d6c71",
        "devicename": "More hot water",
        "roomhint": "Service Room",
        "name": "",
        "passthru": false,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "more-hot-water",
        "onvalue": "1",
        "onvalueType": "num",
        "offvalue": "0",
        "offvalueType": "num",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": true,
        "asyncCmd": false,
        "outputs": 1,
        "x": 600,
        "y": 280,
        "wires": [
            [
                "660188df0186d9af"
            ]
        ]
    },
    {
        "id": "9f8ecdb12e5082f5",
        "type": "link in",
        "z": "2de9a494ac1d6c71",
        "name": "link in 8",
        "links": [
            "660188df0186d9af"
        ],
        "x": 75,
        "y": 260,
        "wires": [
            [
                "ed13633a52b01660",
                "99b78cb07dd4c043"
            ]
        ]
    },
    {
        "id": "660188df0186d9af",
        "type": "link out",
        "z": "2de9a494ac1d6c71",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "9f8ecdb12e5082f5"
        ],
        "x": 765,
        "y": 260,
        "wires": []
    },
    {
        "id": "5bb98af947157223",
        "type": "node-espota",
        "z": "7d41aab9fd0b6a3e",
        "firmwareLink": "https://github.com/andrei-tatar/ha-wifi-switch/releases/latest/download/ha_switch_esp32.bin",
        "includeTopics": "^ha-switch/(.+)/version$",
        "excludeTopics": "",
        "name": "",
        "x": 430,
        "y": 140,
        "wires": []
    },
    {
        "id": "f2dddb9e4756a85a",
        "type": "mqtt in",
        "z": "7d41aab9fd0b6a3e",
        "name": "",
        "topic": "ha-switch/+/version",
        "qos": "0",
        "datatype": "utf8",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "5bb98af947157223"
            ]
        ]
    },
    {
        "id": "b5f045d301d04cf3",
        "type": "inject",
        "z": "7d41aab9fd0b6a3e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "update",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "5bb98af947157223"
            ]
        ]
    },
    {
        "id": "f648133e35429919",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Main",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Hallway",
        "name": "3. hallway - main",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-3/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "8521a26270a7f5ed",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Dining",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Living Room",
        "name": "12. living - dining",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-12/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 470,
        "y": 380,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "d2f287de8e2b7bdb",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Yard",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Outside",
        "name": "11. outside - yard",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-11/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 470,
        "y": 440,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "b7b0b4d5c552d29a",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Bedroom",
        "name": "2. big bedroom",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-2/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 460,
        "y": 500,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "645b5b8f07f055fc",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Shutters",
        "roomhint": "Bedroom",
        "name": "3. big bedroom",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-3/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1140,
        "y": 620,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "8ad4a13f3069f1ac",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "map",
        "func": "return {\n    payload: {\n        openPercent: msg.payload.open,\n    },\n    topic: msg.topic,\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 620,
        "wires": [
            [
                "49583d9de218bf42"
            ]
        ]
    },
    {
        "id": "b18a911a13f74c55",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "dimmers",
        "func": "if (msg.topic.startsWith('ha-switch/switch-dimmer-'))\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 320,
        "wires": [
            [
                "fd418eb5a2d37315"
            ]
        ]
    },
    {
        "id": "821e92a25e3b217f",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "blinds",
        "func": "if (msg.topic.startsWith('ha-switch/switch-blinds-')) {\n    return {\n        payload: {\n            open: msg.payload.openPercent,\n            online: msg.payload.online,\n        },\n        topic: msg.topic,\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 620,
        "wires": [
            [
                "841b001db8f4d3d5"
            ]
        ]
    },
    {
        "id": "dc8db494b158e485",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Shutters",
        "roomhint": "Office",
        "name": "5. office",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-5/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1120,
        "y": 680,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "917568c1def8a578",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Office",
        "name": "8. office",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-8/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 440,
        "y": 620,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "0450c2ce91a72b78",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "TV Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Living Room",
        "name": "4. living - main",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-4/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "dfc52bfc266069f0",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Kitchen",
        "name": "7. kitchen",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-7/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 440,
        "y": 680,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "7426cbb773e5162c",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Door Shutters",
        "roomhint": "Living Room",
        "name": "4. living - door",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-4/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1140,
        "y": 740,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "efac8720a10238d0",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Window Shutters",
        "roomhint": "Living Room",
        "name": "6. living - window",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-6/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1150,
        "y": 800,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "6b14f65c73a0bf69",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Shutters",
        "roomhint": "Kitchen",
        "name": "2. kitchen window",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-2/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1150,
        "y": 860,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "ba592d172f57dd43",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Fixed Shutters",
        "roomhint": "Kitchen",
        "name": "8. kitchen - fixed window",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-8/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1170,
        "y": 920,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "6762d86fa674744b",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Bathroom",
        "name": "5. big bedroom bathroom",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-5/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 490,
        "y": 560,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "340c4ef4bedec8a6",
        "type": "link out",
        "z": "7d41aab9fd0b6a3e",
        "name": "state changed",
        "mode": "link",
        "links": [
            "3fdd728b0585df23",
            "b8a5316364ec5fe8",
            "1b4bb0df8c93cc89",
            "b3a359bc7a838527"
        ],
        "x": 1035,
        "y": 60,
        "wires": []
    },
    {
        "id": "dcb6e3571adc03a9",
        "type": "mqtt in",
        "z": "7d41aab9fd0b6a3e",
        "name": "",
        "topic": "ha-switch/+/state",
        "qos": "0",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 610,
        "y": 60,
        "wires": [
            [
                "cb6ee814173dbfcd"
            ]
        ]
    },
    {
        "id": "756f250b09605648",
        "type": "mqtt in",
        "z": "7d41aab9fd0b6a3e",
        "name": "",
        "topic": "ha-switch/+/online",
        "qos": "0",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 600,
        "y": 120,
        "wires": [
            [
                "a0e19251ca4aaac4"
            ]
        ]
    },
    {
        "id": "a0e19251ca4aaac4",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "set online",
        "func": "if (typeof msg.payload !== 'boolean') {\n    return;\n}\n\nconst parts = msg.topic.split('/');\nparts[parts.length - 1] = 'state';\n\nreturn {\n    payload: {\n        online: msg.payload,\n    },\n    topic: parts.join('/'),\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 120,
        "wires": [
            [
                "cb6ee814173dbfcd"
            ]
        ]
    },
    {
        "id": "b8a5316364ec5fe8",
        "type": "link in",
        "z": "7d41aab9fd0b6a3e",
        "name": "link in 1",
        "links": [
            "340c4ef4bedec8a6"
        ],
        "x": 105,
        "y": 320,
        "wires": [
            [
                "b18a911a13f74c55"
            ]
        ]
    },
    {
        "id": "3fdd728b0585df23",
        "type": "link in",
        "z": "7d41aab9fd0b6a3e",
        "name": "link in 2",
        "links": [
            "340c4ef4bedec8a6"
        ],
        "x": 805,
        "y": 620,
        "wires": [
            [
                "821e92a25e3b217f"
            ]
        ]
    },
    {
        "id": "d1bf6e5c3d819560",
        "type": "link in",
        "z": "7d41aab9fd0b6a3e",
        "name": "update state",
        "links": [
            "6af1216eb7c5c03f",
            "49583d9de218bf42",
            "43ff6ea09782443a",
            "bd1a7b07efa6d260"
        ],
        "x": 1145,
        "y": 100,
        "wires": [
            [
                "f51b18a179ad290d"
            ]
        ]
    },
    {
        "id": "71abf52c70a50205",
        "type": "mqtt out",
        "z": "7d41aab9fd0b6a3e",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 1370,
        "y": 100,
        "wires": []
    },
    {
        "id": "f51b18a179ad290d",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "set state",
        "func": "return {\n    ...msg,\n    topic: `${msg.topic}/set`,\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 100,
        "wires": [
            [
                "71abf52c70a50205"
            ]
        ]
    },
    {
        "id": "6af1216eb7c5c03f",
        "type": "link out",
        "z": "7d41aab9fd0b6a3e",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "d1bf6e5c3d819560"
        ],
        "x": 735,
        "y": 320,
        "wires": []
    },
    {
        "id": "49583d9de218bf42",
        "type": "link out",
        "z": "7d41aab9fd0b6a3e",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "d1bf6e5c3d819560"
        ],
        "x": 1445,
        "y": 620,
        "wires": []
    },
    {
        "id": "03e9def7ed68132d",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "map",
        "func": "return {\n    payload: {\n        on: [msg.payload],\n    },\n    topic: msg.topic,\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 260,
        "wires": [
            [
                "43ff6ea09782443a"
            ]
        ]
    },
    {
        "id": "26e27a446f7b7444",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "onoff",
        "func": "if (msg.topic.startsWith('ha-switch/switch-onoff-')) {\n    return {\n        payload: {\n            ...msg.payload,\n            ...('on' in msg.payload\n                && Array.isArray(msg.payload.on)\n                && msg.payload.on.length\n                ? { on: msg.payload.on[0] }\n                : {}),\n        },\n        topic: msg.topic,\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 260,
        "wires": [
            [
                "af0b3ee1164dc74c"
            ]
        ]
    },
    {
        "id": "1b4bb0df8c93cc89",
        "type": "link in",
        "z": "7d41aab9fd0b6a3e",
        "name": "link in 3",
        "links": [
            "340c4ef4bedec8a6"
        ],
        "x": 805,
        "y": 260,
        "wires": [
            [
                "26e27a446f7b7444"
            ]
        ]
    },
    {
        "id": "43ff6ea09782443a",
        "type": "link out",
        "z": "7d41aab9fd0b6a3e",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "d1bf6e5c3d819560"
        ],
        "x": 1445,
        "y": 260,
        "wires": []
    },
    {
        "id": "1eeea8ddfe40852e",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Washer Room",
        "name": "9. washer room",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-9/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1140,
        "y": 200,
        "wires": [
            [
                "03e9def7ed68132d"
            ]
        ]
    },
    {
        "id": "144549cc6dc7cbe7",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Guest Bathroom",
        "name": "3. bathroom - guest",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-3/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1150,
        "y": 260,
        "wires": [
            [
                "03e9def7ed68132d"
            ]
        ]
    },
    {
        "id": "8714fba0422dd9f9",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Service Room",
        "name": "1. cam. tehnica",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-1/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "03e9def7ed68132d"
            ]
        ]
    },
    {
        "id": "b2a67d17df0195f8",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Main Bathroom",
        "name": "9. main bathroom",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-9/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 470,
        "y": 740,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "31ccd8e9f0a2e09e",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Entrance",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Hallway",
        "name": "10. hallway - entrance",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-dimmer-10/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "80206ddcbd9d94f1"
            ]
        ]
    },
    {
        "id": "c78d7adf71b71c07",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Entrance",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Outside",
        "name": "7. outside - entrance",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-7/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1160,
        "y": 380,
        "wires": [
            [
                "03e9def7ed68132d"
            ]
        ]
    },
    {
        "id": "6ebdf6901c3c44a1",
        "type": "noraf-switch",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Water Pump",
        "roomhint": "Service Room",
        "name": "r1. water pump",
        "passthru": false,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-r1/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": true,
        "asyncCmd": false,
        "outputs": 1,
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "03e9def7ed68132d"
            ]
        ]
    },
    {
        "id": "52cbf133f2f61326",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "Clone On/Off",
        "func": "/**\n * @type Map<string, {topic:string, type:'onoff'|'offonly'}>\n */\nconst CTRL = new Map([\n    ['ha-switch/switch-dimmer-5/state', { topic: 'ha-switch/switch-onoff-4/state', type: 'onoff' }],\n    ['ha-switch/switch-dimmer-9/state', { topic: 'ha-switch/switch-onoff-6/state', type: 'onoff' }],\n    ['ha-switch/switch-onoff-5/state', { topic: 'ha-switch/switch-onoff-8/state', type: 'offonly' }],\n]);\n\nconst topic = msg.topic;\nconst to = CTRL.get(topic);\nif (!to) {\n    return;\n}\n\nlet on = msg.payload.on;\nif (Array.isArray(on) && on.length) {\n    on = on[0];\n}\nif (typeof on != 'boolean') {\n    return;\n}\n\nconst lastOn = context.get(topic);\nif (lastOn !== on) {\n    context.set(topic, on);\n\n    if (to.type === 'offonly' && on) {\n        return;\n    }\n\n    return {\n        topic: to.topic,\n        payload: {\n            on: [on],\n        },\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 840,
        "wires": [
            [
                "bd1a7b07efa6d260"
            ]
        ]
    },
    {
        "id": "b3a359bc7a838527",
        "type": "link in",
        "z": "7d41aab9fd0b6a3e",
        "name": "link in 5",
        "links": [
            "340c4ef4bedec8a6"
        ],
        "x": 115,
        "y": 840,
        "wires": [
            [
                "52cbf133f2f61326"
            ]
        ]
    },
    {
        "id": "bd1a7b07efa6d260",
        "type": "link out",
        "z": "7d41aab9fd0b6a3e",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "d1bf6e5c3d819560"
        ],
        "x": 345,
        "y": 840,
        "wires": []
    },
    {
        "id": "177b7b13cf11baf0",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Guest Room",
        "name": "2. bedroom - guest",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-2/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "03e9def7ed68132d"
            ]
        ]
    },
    {
        "id": "cfd8480b606b454e",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "d": true,
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Dressing",
        "name": "5. dressing",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-5/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 550,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "72228fcd02ae304f",
        "type": "noraf-light",
        "z": "7d41aab9fd0b6a3e",
        "d": true,
        "devicename": "Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Dressing Mirror",
        "name": "8. dressing mirror",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-onoff-8/state",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 570,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "a3dbdc255ebe8243",
        "type": "noraf-openclose",
        "z": "7d41aab9fd0b6a3e",
        "devicename": "Shutters",
        "roomhint": "Guest Room",
        "name": "1. guest room",
        "directions": "",
        "openclosetype": "SHUTTER",
        "passthru": false,
        "errorifstateunchaged": false,
        "discrete": false,
        "lockunlock": false,
        "commandonly": false,
        "queryonly": false,
        "nora": "f1e538c1.0315f8",
        "topic": "ha-switch/switch-blinds-1/state",
        "openvalue": "true",
        "openvalueType": "bool",
        "closevalue": "false",
        "closevalueType": "bool",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 1140,
        "y": 560,
        "wires": [
            [
                "8ad4a13f3069f1ac"
            ]
        ]
    },
    {
        "id": "cb6ee814173dbfcd",
        "type": "function",
        "z": "7d41aab9fd0b6a3e",
        "name": "store state",
        "func": "const value = global.get(msg.topic) || { online: true };\n\nif (Array.isArray(msg.payload.on) && msg.payload.on.length === 1) {\n    msg.payload.on = msg.payload.on[0];\n}\n\nglobal.set(msg.topic, {\n    ...value,\n    ...msg.payload,\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 60,
        "wires": [
            [
                "340c4ef4bedec8a6"
            ]
        ]
    },
    {
        "id": "e6892c53b951d955",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "Last Message",
        "func": "const now = new Date();\nconst last = context.get(msg.topic) || {};\nconst span = last ? (now.getTime() - last.lastTick) / 1000 : null;\nconst maxSpan = last && span ? Math.max(last.maxSpan, span) : null;\n\ncontext.set(msg.topic, {\n    lastTick: now.getTime(),\n    last: now.toLocaleString(),\n    maxSpan,\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 180,
        "wires": [
            [
                "a2c9d6a36b64dbb9"
            ]
        ]
    },
    {
        "id": "46c6a15226b95a40",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "zigbee2mqtt/temp/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 140,
        "wires": [
            [
                "e6892c53b951d955"
            ]
        ]
    },
    {
        "id": "3f2e0c17ed43535a",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "zigbee2mqtt/pir/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 180,
        "wires": [
            [
                "e6892c53b951d955"
            ]
        ]
    },
    {
        "id": "568b712cbc5d52ec",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "zigbee2mqtt/light/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "e6892c53b951d955"
            ]
        ]
    },
    {
        "id": "1432e0debb3006ca",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "zigbee2mqtt/switch/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 260,
        "wires": [
            [
                "e6892c53b951d955"
            ]
        ]
    },
    {
        "id": "eb8c54867345d225",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "stat/+/+/RESULT",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "e6892c53b951d955"
            ]
        ]
    },
    {
        "id": "532c2f5d16d7a052",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "zigbee2mqtt/relay/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "e6892c53b951d955"
            ]
        ]
    },
    {
        "id": "42e556342bd34fe3",
        "type": "node-ups",
        "z": "13aa577370e4c4d7",
        "port": "/dev/serial/by-id/usb-Silicon_Labs_CP2102_USB_to_UART_Bridge_Controller_0001-if00-port0",
        "name": "",
        "topic": "",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "3d478a662ee44292"
            ],
            [
                "66f0242e1156827d"
            ]
        ]
    },
    {
        "id": "66f0242e1156827d",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "GRID status",
        "func": "const now = new Date();\nconst status = msg.payload === 'POWER' ? 'ONLINE' : 'OFFLINE';\nnode.status({\n    fill: status === 'ONLINE' ? 'green' : 'red',\n    shape: 'dot',\n    text: status,\n});\n\nflow.set('grid_offline', status === 'OFFLINE');\nflow.set('last_grid_status_change', new Date().getTime());\n\nconst key = `${now.getMonth() + 1}-${now.getDate()}`;\nconst powerLosses = flow.get('power') || {};\nlet perDay = powerLosses[key];\nif (!perDay) {\n    powerLosses[key] = perDay = [];\n}\nif (perDay[perDay.length - 1]?.status === status) {\n    //handle restarts of nodered...\n    return;\n}\nperDay.push({ at: now.toLocaleTimeString(), status });\nflow.set('power', powerLosses);\n\nlet recovered = '';\nif (status === 'OFFLINE') {\n    context.set('offline', now.getTime());\n} else {\n    const offlineAt = context.get('offline');\n    context.set('offline', null);\n    if (typeof offlineAt === 'number') {\n        let span = (now.getTime() - offlineAt) / 1000;\n        let unit = 'sec';\n        if (span >= 60) {\n            span /= 60;\n            unit = 'min';\n\n            if (span >= 60) {\n                span /= 60;\n                unit = 'h';\n\n                if (span >= 24) {\n                    span /= 24;\n                    unit = 'day';\n                }\n            }\n        }\n\n        recovered = ` Recovered after ${span} ${unit}.`;\n    }\n}\n\n\nreturn {\n    payload: {\n        tag: `power`,\n        title: 'Grid Status',\n        body: `${status} at ${now.toLocaleString()}.${recovered}`,\n    },\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 480,
        "wires": [
            [
                "684884b00c3e9fad"
            ]
        ]
    },
    {
        "id": "684884b00c3e9fad",
        "type": "noraf-notify",
        "z": "13aa577370e4c4d7",
        "tag": "",
        "title": "??",
        "body": "??",
        "icon": "",
        "name": "Notify",
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "actions": [],
        "closeNotification": false,
        "x": 730,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "b7e650722bc17863",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "UPS battery",
        "func": "if (msg.payload.battery.soc < 25) {\n    return {\n        payload: {\n            tag: 'ups-battery',\n            title: 'Warning',\n            body: `UPS battery low (${msg.payload.battery.soc}%)`,\n        },\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 380,
        "wires": [
            [
                "2222fb495b79673f"
            ]
        ]
    },
    {
        "id": "a2c9d6a36b64dbb9",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "Battery low",
        "func": "if (msg.payload?.battery_low === true ||\n    msg.payload?.battery < 20) {\n    const now = new Date().toLocaleString();\n    const location = msg.topic.substring(msg.topic.indexOf('/') + 1);\n    return {\n        topic: location,\n        payload: {\n            tag: location,\n            title: 'Battery low',\n            body: `${location} at ${now}. Battery: ${msg.payload.battery ?? -1}. Low: ${msg.payload.battery_low}`,\n        },\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 240,
        "wires": [
            [
                "6ac061a53b0101c8"
            ]
        ]
    },
    {
        "id": "5b83184da40ca65f",
        "type": "trigger",
        "z": "13aa577370e4c4d7",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 310,
        "y": 340,
        "wires": [
            [
                "d10c6183a957ae08"
            ]
        ]
    },
    {
        "id": "d10c6183a957ae08",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "UPS connection down",
        "func": "const now = new Date();\nreturn {\n    payload: {\n        tag: 'ups-connection',\n        title: 'Warning',\n        body: `UPS connection is down ${now.toLocaleString()}`,\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 340,
        "wires": [
            [
                "684884b00c3e9fad"
            ]
        ]
    },
    {
        "id": "2222fb495b79673f",
        "type": "trigger",
        "z": "13aa577370e4c4d7",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "15",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 490,
        "y": 380,
        "wires": [
            [
                "684884b00c3e9fad"
            ]
        ]
    },
    {
        "id": "6ac061a53b0101c8",
        "type": "trigger",
        "z": "13aa577370e4c4d7",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "24",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 240,
        "wires": [
            [
                "684884b00c3e9fad"
            ]
        ]
    },
    {
        "id": "357104d13b31bb08",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "Status",
        "func": "const { grid: { voltage, frequency }, battery: { soc } } = msg.payload;\n\n\nnode.status({\n    fill: \"blue\",\n    shape: \"ring\",\n    text: `${voltage}V ${Math.round(frequency * 100) / 100}Hz ${soc}%`,\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c34a5e4a5660de91",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "ha-switch/+/online",
        "qos": "0",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 560,
        "wires": [
            [
                "184032aab20a73e0"
            ]
        ]
    },
    {
        "id": "184032aab20a73e0",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "d": true,
        "name": "notify when offline",
        "func": "if (typeof msg.payload !== 'boolean' || msg.payload) {\n    return;\n}\n\nconst now = new Date().getTime();\n\nconst lastGridStatusChange = flow.get('last_grid_status_change');\nif (typeof lastGridStatusChange === 'number') {\n    if (now - lastGridStatusChange < 300000) {\n        // grid status changed in the last 5 mins, ignore offline messages\n        return;\n    }\n}\n\nconst lastOfflines = context.get('last5min') || {};\nfor (const key of Object.keys(lastOfflines)) {\n    const delta = (now - lastOfflines[key]) / 1000;\n    if (delta > 60) {\n        delete lastOfflines[key];\n    }\n}\n\nconst name = msg.topic.split('/')[1];\nlastOfflines[name] = now;\ncontext.set('last5min', lastOfflines);\n\nif (flow.get('grid_offline') === false) {\n    const names = Object.keys(lastOfflines).join(',');\n    const nowString = new Date().toLocaleString();\n    node.send({\n        payload: {\n            tag: `devices-offline`,\n            title: 'Device(s) offline',\n            body: `${names} at ${nowString}`,\n        },\n    });\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 560,
        "wires": [
            [
                "a24cb7686bd98421"
            ]
        ]
    },
    {
        "id": "3f3c88e152b83b07",
        "type": "mqtt in",
        "z": "13aa577370e4c4d7",
        "name": "",
        "topic": "ha-switch/+/reset-reason",
        "qos": "0",
        "datatype": "utf8",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 620,
        "wires": [
            [
                "344c6d12cc3b6df2"
            ]
        ]
    },
    {
        "id": "344c6d12cc3b6df2",
        "type": "function",
        "z": "13aa577370e4c4d7",
        "name": "notify reason",
        "func": "const RESET_CAUSE = {\n    '0': 'NO_MEAN',\n    '1': 'POWERON',\n    '3': 'SW',\n    '4': 'OWDT',\n    '5': 'DEEPSLEEP',\n    '6': 'SDIO',\n    '7': 'TG0WDT_SYS',\n    '8': 'TG1WDT_SYS',\n    '9': 'RTCWDT_SYS',\n    '10': 'INTRUSION',\n    '11': 'TGWDT_CPU',\n    '12': 'SW_CPU',\n    '13': 'RTCWDT_CPU',\n    '14': 'EXT_CPU',\n    '15': 'RTCWDT_BROWN_OUT',\n    '16': 'RTCWDT_RTC',\n};\n\nconst reason = msg.payload;\nconst name = msg.topic.split('/')[1];\nconst last = context.get('last5min') || {};\nconst now = new Date().getTime();\n\nfor (const key of Object.keys(last)) {\n    const delta = (now - last[key].at) / 1000;\n    if (delta > 60) {\n        delete last[key];\n    }\n}\n\nlast[name] = { at: now, reason: RESET_CAUSE[reason] ?? 'unknown' };\ncontext.set('last5min', last);\n\nconst lastGridChange = flow.get('last_grid_status_change');\nif (lastGridChange && Math.abs(now - lastGridChange) < 30000) {\n    return;\n}\n\nconst names = Object.keys(last).map(k => `${k}-${last[k].reason}`).join(', ');\nconst nowString = new Date().toLocaleString();\nnode.send({\n    payload: {\n        tag: `devices-reset`,\n        title: 'Device(s) reset',\n        body: `${names}`,\n    },\n});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "a24cb7686bd98421"
            ]
        ]
    },
    {
        "id": "a24cb7686bd98421",
        "type": "trigger",
        "z": "13aa577370e4c4d7",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "topic",
        "topic": "payload.tag",
        "outputs": 1,
        "x": 530,
        "y": 580,
        "wires": [
            [
                "684884b00c3e9fad"
            ]
        ]
    },
    {
        "id": "f08cfee748e21645",
        "type": "function",
        "z": "536b0e9eda614fd2",
        "name": "Map",
        "func": "let name = msg.topic.substring(msg.topic.indexOf('/') + 1);\n\nconst PREFIX = '/RESULT';\nif (name.endsWith(PREFIX)) {\n    name = name.substring(0, name.length - PREFIX.length);\n}\n\nconst previousPayload = global.get(name) ?? {};\nconst payload = {\n    ...previousPayload,\n    ...v('temperature'),\n    ...v('humidity'),\n    ...v('state', 'on', p => p === 'ON'),\n    ...v('POWER', 'on', p => p === 'ON'),\n    ...v('Dimmer', 'brightness'),\n    ...v('occupancy'),\n    online: msg.payload?.online ?? true,\n};\nglobal.set(name, payload);\n\nreturn {\n    payload,\n    topic: msg.topic,\n};\n\n/**\n* @param {string} input\n* @param {string} output\n* @param {(a:any)=>any} transform\n* @returns {Record<string, *>}\n*/\nfunction v(input, output = input, transform = x => x) {\n    if (input in msg.payload) {\n        return {\n            [output]: transform(msg.payload[input])\n        };\n    }\n    return {};\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 240,
        "wires": [
            [
                "38687e0ac546600f"
            ]
        ]
    },
    {
        "id": "38687e0ac546600f",
        "type": "noraf-switch",
        "z": "536b0e9eda614fd2",
        "devicename": "Warm Water Pump",
        "roomhint": "Service Room",
        "name": "",
        "passthru": false,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/relay/water-pump",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": true,
        "asyncCmd": false,
        "outputs": 1,
        "x": 370,
        "y": 240,
        "wires": [
            [
                "7d559a43a7ec6440"
            ]
        ]
    },
    {
        "id": "7d559a43a7ec6440",
        "type": "function",
        "z": "536b0e9eda614fd2",
        "name": "Map",
        "func": "return {\n    payload: {\n        state: msg.payload ? 'ON' : 'OFF',\n    },\n    topic: msg.topic + '/set',\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "b02b6ceb7687e947"
            ]
        ]
    },
    {
        "id": "b02b6ceb7687e947",
        "type": "mqtt out",
        "z": "536b0e9eda614fd2",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "857f019fa5ad8be5",
        "type": "switch",
        "z": "536b0e9eda614fd2",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": ".+\\/relay\\/.+",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": ".+\\/temp\\/.+",
                "vt": "str",
                "case": false
            },
            {
                "t": "regex",
                "v": ".+\\/pir\\/.+",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 570,
        "y": 120,
        "wires": [
            [
                "9cf17a33d6369750"
            ],
            [
                "591e4bb345a80b08"
            ],
            [
                "2e643a135c0bc68a"
            ]
        ]
    },
    {
        "id": "9cf17a33d6369750",
        "type": "trigger",
        "z": "536b0e9eda614fd2",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "20",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 60,
        "wires": [
            [
                "18ee405180e7ef0d"
            ]
        ]
    },
    {
        "id": "591e4bb345a80b08",
        "type": "trigger",
        "z": "536b0e9eda614fd2",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "2.2",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 120,
        "wires": [
            [
                "18ee405180e7ef0d"
            ]
        ]
    },
    {
        "id": "e1a0476c7e29f306",
        "type": "cronplus",
        "z": "536b0e9eda614fd2",
        "name": "water pump",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "turn on",
                "topic": "zigbee2mqtt/relay/water-pump/set",
                "payloadType": "str",
                "payload": "ON",
                "expressionType": "cron",
                "expression": "0 0 7 ? * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            },
            {
                "name": "turn off",
                "topic": "zigbee2mqtt/relay/water-pump/set",
                "payloadType": "str",
                "payload": "OFF",
                "expressionType": "cron",
                "expression": "0 0 22 ? * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 130,
        "y": 500,
        "wires": [
            [
                "b6cc3dcb19c105e1"
            ]
        ]
    },
    {
        "id": "b6cc3dcb19c105e1",
        "type": "mqtt out",
        "z": "536b0e9eda614fd2",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 350,
        "y": 500,
        "wires": []
    },
    {
        "id": "5174cbdc84c9deb9",
        "type": "mqtt in",
        "z": "536b0e9eda614fd2",
        "name": "",
        "topic": "zigbee2mqtt/pir/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "59a6f1a86fee64bb"
            ]
        ]
    },
    {
        "id": "c77921bad91a3fd4",
        "type": "mqtt in",
        "z": "536b0e9eda614fd2",
        "name": "",
        "topic": "zigbee2mqtt/temp/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 40,
        "wires": [
            [
                "59a6f1a86fee64bb"
            ]
        ]
    },
    {
        "id": "9e54c33578b35bbc",
        "type": "mqtt in",
        "z": "536b0e9eda614fd2",
        "name": "",
        "topic": "zigbee2mqtt/relay/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "59a6f1a86fee64bb"
            ]
        ]
    },
    {
        "id": "32d650ad5f529b41",
        "type": "mqtt in",
        "z": "536b0e9eda614fd2",
        "name": "",
        "topic": "zigbee2mqtt/light/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 160,
        "wires": [
            [
                "59a6f1a86fee64bb"
            ]
        ]
    },
    {
        "id": "8d660f4ac3640160",
        "type": "link in",
        "z": "536b0e9eda614fd2",
        "name": "link in 6",
        "links": [
            "59a6f1a86fee64bb"
        ],
        "x": 455,
        "y": 120,
        "wires": [
            [
                "857f019fa5ad8be5"
            ]
        ]
    },
    {
        "id": "59a6f1a86fee64bb",
        "type": "link out",
        "z": "536b0e9eda614fd2",
        "name": "z2mqtt",
        "mode": "link",
        "links": [
            "8d660f4ac3640160",
            "556407976cf82dd1"
        ],
        "x": 315,
        "y": 40,
        "wires": []
    },
    {
        "id": "556407976cf82dd1",
        "type": "link in",
        "z": "536b0e9eda614fd2",
        "name": "link in 7",
        "links": [
            "59a6f1a86fee64bb",
            "18ee405180e7ef0d"
        ],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "f08cfee748e21645"
            ]
        ]
    },
    {
        "id": "18ee405180e7ef0d",
        "type": "link out",
        "z": "536b0e9eda614fd2",
        "name": "z2mqtt",
        "mode": "link",
        "links": [
            "556407976cf82dd1"
        ],
        "x": 855,
        "y": 100,
        "wires": []
    },
    {
        "id": "2e643a135c0bc68a",
        "type": "trigger",
        "z": "536b0e9eda614fd2",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "1.5",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 180,
        "wires": [
            [
                "18ee405180e7ef0d"
            ]
        ]
    },
    {
        "id": "dfca40dd7aa881e6",
        "type": "mqtt in",
        "z": "05e865126427c1f9",
        "name": "",
        "topic": "zigbee2mqtt/pir/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "a0bf8cda615f1687",
                "309ce3ec93316bc9"
            ]
        ]
    },
    {
        "id": "a0bf8cda615f1687",
        "type": "function",
        "z": "05e865126427c1f9",
        "d": true,
        "name": "When motion",
        "func": "/**\n * @type Array<{src:Array<string>, target:string}>\n */\nconst targetByPir = [\n    {\n        src: ['hallway-1', 'hallway-2'],\n        target: 'switch-dimmer-3',\n    }, {\n        src: ['hallway-3'],\n        target: 'switch-dimmer-10',\n    }\n]\n\nconst parts = msg.topic.split('/');\nconst name = parts[parts.length - 1];\nconst found = targetByPir.find(t => t.src.includes(name));\n\nif (msg.payload.occupancy && found) {\n    return {\n        payload: {\n            'brightness': 15,\n            'for': 300\n        },\n        topic: `ha-switch/${found.target}/state/set`,\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "var  timer;\n",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 80,
        "wires": [
            [
                "05ebecdb8b80ec34"
            ]
        ],
        "outputLabels": [
            "battery low"
        ]
    },
    {
        "id": "05ebecdb8b80ec34",
        "type": "mqtt out",
        "z": "05e865126427c1f9",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "a42db8829c31d140",
        "type": "inject",
        "z": "05e865126427c1f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "ha-switch/switch-dimmer-8/state/set",
        "payload": "{\"brightness\":20, \"for\": 3}",
        "payloadType": "json",
        "x": 650,
        "y": 200,
        "wires": [
            [
                "05ebecdb8b80ec34"
            ]
        ]
    },
    {
        "id": "309ce3ec93316bc9",
        "type": "function",
        "z": "05e865126427c1f9",
        "d": true,
        "name": "When motion",
        "func": "/**\n * @type Array<{src:Array<string>, target:string}>\n */\nconst targetByPir = [\n    {\n        src: ['hallway-1', 'hallway-2'],\n        target: 'switch-dimmer-3',\n    }, {\n        src: ['hallway-3'],\n        target: 'switch-dimmer-10',\n    }\n]\n\nconst parts = msg.topic.split('/');\nconst name = parts[parts.length - 1];\nconst found = targetByPir.find(t => t.src.includes(name));\n\nif (msg.payload.occupancy && found) {\n    return {\n        payload: { on: true },\n        topic: `ha-switch/${found.target}/state/set`,\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "var  timer;\n",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "94000ee52d0a0138"
            ]
        ],
        "outputLabels": [
            "battery low"
        ]
    },
    {
        "id": "94000ee52d0a0138",
        "type": "trigger",
        "z": "05e865126427c1f9",
        "name": "",
        "op1": "",
        "op2": "{\"on\":false}",
        "op1type": "pay",
        "op2type": "json",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 550,
        "y": 120,
        "wires": [
            [
                "05ebecdb8b80ec34"
            ]
        ]
    },
    {
        "id": "bbbdecb1cda7db5e",
        "type": "noraf-doorbell",
        "z": "05e865126427c1f9",
        "devicename": "Doorbell",
        "roomhint": "",
        "name": "",
        "nora": "3302889fa9b7cb44",
        "topic": "",
        "filter": false,
        "x": 600,
        "y": 400,
        "wires": []
    },
    {
        "id": "7dc0804a1cdeba54",
        "type": "inject",
        "z": "05e865126427c1f9",
        "name": "\"Alice\" is at the doorbell",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"named\":[\"Alice\"]}",
        "payloadType": "json",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "bbbdecb1cda7db5e"
            ]
        ]
    },
    {
        "id": "1b08bca9fd2551e9",
        "type": "inject",
        "z": "05e865126427c1f9",
        "name": "someone's at the doorbell (unclassified)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"unclassified\":1}",
        "payloadType": "json",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "bbbdecb1cda7db5e"
            ]
        ]
    },
    {
        "id": "71629549d9fd9dc9",
        "type": "inject",
        "z": "05e865126427c1f9",
        "name": "someone you know is at the doorbell",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"familiar\":1}",
        "payloadType": "json",
        "x": 320,
        "y": 400,
        "wires": [
            [
                "bbbdecb1cda7db5e"
            ]
        ]
    },
    {
        "id": "aeeedb84a9e88d39",
        "type": "inject",
        "z": "05e865126427c1f9",
        "name": "someone's at the doorbell (unfamiliar)",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"unfamiliar\":1}",
        "payloadType": "json",
        "x": 330,
        "y": 480,
        "wires": [
            [
                "bbbdecb1cda7db5e"
            ]
        ]
    },
    {
        "id": "244c26807bc68f0e",
        "type": "sunrise",
        "z": "67e1c6f6bd2fab57",
        "name": "",
        "lat": "45.977066",
        "lon": "21.316671",
        "start": "dawn",
        "end": "sunset",
        "soff": "0",
        "eoff": "0",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "4c7198dcb8cd0684"
            ],
            []
        ]
    },
    {
        "id": "4c7198dcb8cd0684",
        "type": "function",
        "z": "67e1c6f6bd2fab57",
        "name": "outside light on/off",
        "func": "if (!msg.payload) {\n    context.set('light_on', true);\n    turn(true);\n} else if (context.get('light_on')) {\n    context.set('light_on', false);\n    turn(false);\n}\n\nfunction turn(on) {\n    node.send([[{\n        payload: { on },\n        topic: 'ha-switch/switch-dimmer-11/state/set',\n    }, {\n        payload: { on: [on] },\n        topic: 'ha-switch/switch-onoff-7/state/set',\n    }, {\n        topic: 'zigbee2mqtt/light/outside/set',\n        payload: { state: on ? 'ON' : 'OFF' },\n    }]]);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "bdccd9d28e3a0e9a"
            ]
        ]
    },
    {
        "id": "bdccd9d28e3a0e9a",
        "type": "mqtt out",
        "z": "67e1c6f6bd2fab57",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "0d243166fa4cb451",
        "type": "function",
        "z": "67e1c6f6bd2fab57",
        "name": "open/close blinds",
        "func": "/** @type Array<{id: number, open?:number, close?: number, openLater?: number}> */\nconst BLINDS = [\n    { id: 1, open: 15, openLater: 100, close: 0 }, // guest\n    { id: 2, open: 100, close: 0 }, // kitchen-window\n    { id: 8, open: 15, close: 0 }, // kitchen-fixed\n    { id: 3, open: 15, openLater: 100, close: 0 }, // big bedroom\n    { id: 4, open: 100 }, // living-door\n    { id: 6, open: 15, openLater: 100, close: 0 }, // living-window\n    { id: 5, open: 100, close: 0 }, // office\n];\n\nconst KEY = 'blindsLastCommand';\n\n/** @type {'open'|'close'|'openLater'} */\n\nif (!msg.payload) {\n    blinds('close');\n} else {\n    const now = new Date();\n    const minTimeToOpenBlinds = new Date();\n    minTimeToOpenBlinds.setHours(7, 30, 0);\n\n    const openLaterTime = new Date();\n    openLaterTime.setHours(8, 0, 0);\n\n    if (now >= minTimeToOpenBlinds && now < openLaterTime) {\n        blinds('open');\n    } else if (now >= openLaterTime) {\n        blinds('openLater');\n    }\n}\n\n/** @param {'open'|'close'|'openLater'} type */\nfunction blinds(type) {\n    const last = context.get(KEY);\n    if (type === last) {\n        return;\n    }\n    context.set(KEY, type);\n    const msgs = BLINDS\n        .map(b => {\n            const stateTopic = `ha-switch/switch-blinds-${b.id}/state`;\n            const currentState = global.get(stateTopic);\n\n            const openPercent = b[type];\n            if (typeof openPercent !== 'number') {\n                return;\n            }\n\n            if (currentState) {\n                switch (type) {\n                    case 'open':\n                    case 'openLater':\n                        if (openPercent <= currentState.openPercent) {\n                            return;\n                        }\n                        break;\n                    case 'close':\n                        if (openPercent >= currentState.openPercent) {\n                            //blinds are already more closed\n                            return;\n                        }\n                        break;\n                }\n            }\n\n            return {\n                payload: { openPercent },\n                topic: `${stateTopic}/set`,\n                retain: true,\n            };\n        })\n        .filter(m => !!m);\n    node.send([msgs]);\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "11e1c771398804b4"
            ]
        ]
    },
    {
        "id": "11e1c771398804b4",
        "type": "mqtt out",
        "z": "67e1c6f6bd2fab57",
        "name": "",
        "topic": "",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "4929a74e2d6431e1",
        "type": "sunrise",
        "z": "67e1c6f6bd2fab57",
        "name": "",
        "lat": "45.977066",
        "lon": "21.316671",
        "start": "sunrise",
        "end": "dusk",
        "soff": "-15",
        "eoff": "-15",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "0d243166fa4cb451"
            ],
            []
        ]
    },
    {
        "id": "7346c0bb.6010f",
        "type": "mqtt in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "zigbee2mqtt/switch/office",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 40,
        "wires": [
            [
                "6e18bb1a.fcdfb4"
            ]
        ]
    },
    {
        "id": "6b4aafa9.7bb67",
        "type": "noraf-sensor",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Office",
        "roomhint": "Office",
        "name": "",
        "temperature": true,
        "unit": "C",
        "humidity": true,
        "passthru": false,
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/temp/office",
        "filter": true,
        "sensorSupport": false,
        "sensorStates": [],
        "sensorStatesThatNotify": [],
        "sensorNumeric": false,
        "openCloseSupport": false,
        "openCloseDiscrete": false,
        "onOffSupport": false,
        "x": 670,
        "y": 380,
        "wires": []
    },
    {
        "id": "bb50f16e.915bf",
        "type": "noraf-sensor",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Bedroom",
        "roomhint": "Bedroom",
        "name": "",
        "temperature": true,
        "unit": "C",
        "humidity": true,
        "passthru": false,
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/temp/bedroom",
        "filter": true,
        "sensorSupport": false,
        "sensorStates": [],
        "sensorStatesThatNotify": [],
        "sensorNumeric": false,
        "openCloseSupport": false,
        "openCloseDiscrete": false,
        "onOffSupport": false,
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "97bc482b.54aa28",
        "type": "mqtt in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "zigbee2mqtt/light/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "d3e3eb54.f8d448",
                "d7870a2e.506d08"
            ]
        ]
    },
    {
        "id": "d3e3eb54.f8d448",
        "type": "function",
        "z": "7ceb1d8.f3afee4",
        "name": "Map",
        "func": "let name = msg.topic.substring(msg.topic.indexOf('/') + 1);\n\nconst PREFIX = '/RESULT';\nif (name.endsWith(PREFIX)) {\n    name = name.substring(0, name.length - PREFIX.length);\n}\n\nconst previousPayload = global.get(name) ?? {};\nconst payload = {\n    ...previousPayload,\n    ...v('temperature'),\n    ...v('humidity'),\n    ...v('state', 'on', p => p === 'ON'),\n    ...v('POWER', 'on', p => p === 'ON'),\n    ...v('Dimmer', 'brightness'),\n    online: msg.payload?.online ?? true,\n};\nglobal.set(name, payload);\n\nreturn {\n    payload,\n    topic: msg.topic,\n};\n\n/**\n* @param {string} input\n* @param {string} output\n* @param {vCallback} transform\n* @returns {Record<string, *>}\n*/\nfunction v(input, output = input, transform = x => x) {\n    if (input in msg.payload) {\n        return {\n            [output]: transform(msg.payload[input])\n        };\n    }\n    return {};\n}\n\n/**\n * This callback is displayed as a global member.\n * @callback vCallback\n * @param {*} value\n * @returns {*} transformedValue\n */",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "76e4da7.871e024",
                "6af6885e.ad3898",
                "560abc3288039eac",
                "7dec1f87016fd967",
                "44ea36e4.b6da78",
                "6b4aafa9.7bb67",
                "bb50f16e.915bf",
                "3154423735afdc9d",
                "4ba1a30d5d4d1e66"
            ]
        ]
    },
    {
        "id": "76e4da7.871e024",
        "type": "noraf-light",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Hallway Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Hallway",
        "name": "",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/light/hallway",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 690,
        "y": 440,
        "wires": [
            [
                "b9f407f589ac04c2"
            ]
        ]
    },
    {
        "id": "c6e8bbb7.f47708",
        "type": "function",
        "z": "7ceb1d8.f3afee4",
        "name": "To z2m",
        "func": "return {\n    payload: {\n        state: msg.payload ? 'ON' : 'OFF',\n    },\n    topic: msg.topic + '/set',\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 600,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "6af6885e.ad3898",
        "type": "noraf-light",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Outside Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Outside",
        "name": "",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/light/outside",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 690,
        "y": 500,
        "wires": [
            [
                "b9f407f589ac04c2"
            ]
        ]
    },
    {
        "id": "d37e1068.ac70a",
        "type": "sunrise",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "lat": "45.977066",
        "lon": "21.316671",
        "start": "dawn",
        "end": "sunset",
        "soff": "0",
        "eoff": "0",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "63cdfd39.a83234"
            ],
            []
        ]
    },
    {
        "id": "63cdfd39.a83234",
        "type": "function",
        "z": "7ceb1d8.f3afee4",
        "name": "At night, turn outside light",
        "func": "if (!msg.payload) {\n    global.set('dark', true);\n    const skip = flow.get('skip_night_light');\n    context.set('light_on', !skip);\n    if (!skip) {\n        const state = global.get('light/outside');\n        if (!state?.on) {\n            return [{\n                topic: 'zigbee2mqtt/light/outside/set',\n                payload: { state: 'ON' },\n            }, {\n                //send notification\n            }];\n        }\n    }\n} else if (context.get('light_on')) {\n    global.set('dark', false);\n    context.set('light_on', false);\n    return [{\n        topic: 'zigbee2mqtt/light/outside/set',\n        payload: { state: 'OFF' },\n    }, null, {\n        //set skip to false\n        payload: false,\n    }];\n}\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "98a5d89.9a02428"
            ],
            [
                "4c51e855f44df413"
            ],
            [
                "be89592e8eac221b"
            ]
        ]
    },
    {
        "id": "d7870a2e.506d08",
        "type": "trigger",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 300,
        "wires": [
            [
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "ea2ea17a.f9f62",
        "type": "mqtt in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "stat/dimmer/+/RESULT",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 420,
        "wires": [
            [
                "ba90f4f6.8ddd08",
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "44ea36e4.b6da78",
        "type": "noraf-light",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Deck Light",
        "lightcolor": false,
        "brightnesscontrol": true,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": true,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Deck",
        "name": "",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "stat/dimmer/deck/RESULT",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 690,
        "y": 680,
        "wires": [
            [
                "75e8ab20bdccb8ad"
            ]
        ]
    },
    {
        "id": "a538e3ab.977be",
        "type": "function",
        "z": "7ceb1d8.f3afee4",
        "name": "To Tasmota",
        "func": "const start = msg.topic.indexOf('/') + 1;\nconst deviceName = msg.topic.substr(start, msg.topic.lastIndexOf('/') - start);\nconst state = global.get(deviceName);\n\nconst messages = [{\n    payload: msg.payload.on ? 'ON' : 'OFF',\n    topic: `cmnd/${deviceName}/Power`,\n}];\n\nif ('brightness' in msg.payload &&\n    msg.payload.brightness !== state?.brightness) {\n    messages.push({\n        payload: msg.payload.brightness,\n        topic: `cmnd/${deviceName}/Dimmer`,\n    });\n}\n\nreturn [messages];",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 640,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "8379de16.82ace",
        "type": "mqtt out",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 350,
        "y": 600,
        "wires": []
    },
    {
        "id": "3452748c.a11c4c",
        "type": "inject",
        "z": "7ceb1d8.f3afee4",
        "name": "Query deck power",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "cmnd/dimmer/deck/Power",
        "payloadType": "str",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "ba90f4f6.8ddd08",
        "type": "trigger",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 350,
        "y": 440,
        "wires": [
            [
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "6e18bb1a.fcdfb4",
        "type": "function",
        "z": "7ceb1d8.f3afee4",
        "name": "Toggle Hallway Light",
        "func": "if (msg.payload.action === 'single') {\n    return {\n        payload: {\n            state: 'TOGGLE',\n        },\n        topic: 'zigbee2mqtt/light/hallway/set',\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 40,
        "wires": [
            [
                "98a5d89.9a02428"
            ]
        ]
    },
    {
        "id": "fdaed3ab.e29ab",
        "type": "inject",
        "z": "7ceb1d8.f3afee4",
        "name": "Query deck dimmer",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "topic": "cmnd/dimmer/deck/Dimmer",
        "payloadType": "str",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "7e9a545c.9189bc",
        "type": "link in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "links": [
            "8705d712.879f08",
            "dc75d14e.34cc8",
            "e4b45a77.961e78",
            "98a5d89.9a02428"
        ],
        "x": 55,
        "y": 560,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "98a5d89.9a02428",
        "type": "link out",
        "z": "7ceb1d8.f3afee4",
        "name": "mqtt",
        "links": [
            "7e9a545c.9189bc",
            "7ecc883174140724"
        ],
        "x": 875,
        "y": 40,
        "wires": []
    },
    {
        "id": "560abc3288039eac",
        "type": "noraf-light",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Garage Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Garage",
        "name": "",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/light/garage",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 690,
        "y": 560,
        "wires": [
            [
                "b9f407f589ac04c2"
            ]
        ]
    },
    {
        "id": "7dec1f87016fd967",
        "type": "noraf-light",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Wake Light",
        "lightcolor": false,
        "brightnesscontrol": false,
        "commandonlycolor": false,
        "turnonwhenbrightnesschanges": false,
        "passthru": false,
        "errorifstateunchaged": false,
        "statepayload": true,
        "brightnessoverride": "",
        "roomhint": "Bedroom",
        "name": "",
        "colortype": "hsv",
        "nora": "f1e538c1.0315f8",
        "topic": "zigbee2mqtt/relay/bedroom_wake",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "temperaturemin": "2700",
        "temperaturemax": "5500",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "x": 690,
        "y": 620,
        "wires": [
            [
                "b9f407f589ac04c2"
            ]
        ]
    },
    {
        "id": "f5a4e34320252bc4",
        "type": "mqtt in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "zigbee2mqtt/relay/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 360,
        "wires": [
            [
                "4f47a24b72b61705",
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "4f47a24b72b61705",
        "type": "trigger",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "20",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "e5196dcb88983fc6",
        "type": "mqtt in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "zigbee2mqtt/temp/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "a88d0bb8aee949f4",
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "a88d0bb8aee949f4",
        "type": "trigger",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "op1": "",
        "op2": "{\"online\": false}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "2.2",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 240,
        "wires": [
            [
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "3154423735afdc9d",
        "type": "link out",
        "z": "7ceb1d8.f3afee4",
        "name": "device state changed",
        "links": [
            "a030ce912619d46d"
        ],
        "x": 635,
        "y": 260,
        "wires": []
    },
    {
        "id": "be89592e8eac221b",
        "type": "noraf-switch",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Skip Night Light",
        "roomhint": "Outside",
        "name": "",
        "passthru": true,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": false,
        "asyncCmd": false,
        "outputs": 1,
        "x": 560,
        "y": 160,
        "wires": [
            [
                "e0e59bc6f39447e0"
            ]
        ]
    },
    {
        "id": "4c51e855f44df413",
        "type": "noraf-notify",
        "z": "7ceb1d8.f3afee4",
        "tag": "night-light",
        "title": "Night Light",
        "body": "Night light was turned on!",
        "icon": "",
        "name": "",
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "actions": [
            {
                "p": "Skip this night",
                "v": "true",
                "vt": "bool",
                "d": false
            }
        ],
        "closeNotification": false,
        "x": 550,
        "y": 100,
        "wires": [
            [
                "be89592e8eac221b",
                "38dd880281fd3a4f"
            ]
        ]
    },
    {
        "id": "e0e59bc6f39447e0",
        "type": "change",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "skip_night_light",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "38dd880281fd3a4f",
        "type": "function",
        "z": "7ceb1d8.f3afee4",
        "name": "Turn OFF if skip",
        "func": "if (msg.payload === true) {\n    return {\n        topic: 'zigbee2mqtt/light/outside/set',\n        payload: { state: 'OFF' },\n    };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 100,
        "wires": [
            [
                "98a5d89.9a02428"
            ]
        ]
    },
    {
        "id": "75e8ab20bdccb8ad",
        "type": "link out",
        "z": "7ceb1d8.f3afee4",
        "name": "tasmota",
        "links": [
            "bd037393fb3732c7",
            "ca9dd8ce871a00db"
        ],
        "x": 815,
        "y": 680,
        "wires": []
    },
    {
        "id": "b9f407f589ac04c2",
        "type": "link out",
        "z": "7ceb1d8.f3afee4",
        "name": "zigbee2mqtt",
        "links": [
            "3eaaee8d48469e17",
            "05e168b4c197db65"
        ],
        "x": 835,
        "y": 480,
        "wires": []
    },
    {
        "id": "3eaaee8d48469e17",
        "type": "link in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "links": [
            "b9f407f589ac04c2"
        ],
        "x": 55,
        "y": 600,
        "wires": [
            [
                "c6e8bbb7.f47708"
            ]
        ]
    },
    {
        "id": "bd037393fb3732c7",
        "type": "link in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "links": [
            "75e8ab20bdccb8ad"
        ],
        "x": 55,
        "y": 640,
        "wires": [
            [
                "a538e3ab.977be"
            ]
        ]
    },
    {
        "id": "5aa736b16e486edc",
        "type": "inject",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "skip_night_light",
        "payloadType": "flow",
        "x": 320,
        "y": 160,
        "wires": [
            [
                "be89592e8eac221b"
            ]
        ]
    },
    {
        "id": "8e891f757e90a8a0",
        "type": "mqtt in",
        "z": "7ceb1d8.f3afee4",
        "name": "",
        "topic": "stat/outlet/+/RESULT",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 480,
        "wires": [
            [
                "ba90f4f6.8ddd08",
                "d3e3eb54.f8d448"
            ]
        ]
    },
    {
        "id": "fe1d0a76b2274a32",
        "type": "inject",
        "z": "7ceb1d8.f3afee4",
        "name": "Query T2 power",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "cmnd/outlet/t2/Power",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "4ba1a30d5d4d1e66",
        "type": "noraf-outlet",
        "z": "7ceb1d8.f3afee4",
        "devicename": "Feed Dog",
        "roomhint": "Outside",
        "name": "",
        "passthru": false,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "stat/outlet/t3/RESULT",
        "onvalue": "{\"on\":true}",
        "onvalueType": "json",
        "offvalue": "{\"on\":false}",
        "offvalueType": "json",
        "twofactor": "off",
        "twofactorpin": "",
        "filter": true,
        "asyncCmd": false,
        "outputs": 1,
        "x": 680,
        "y": 740,
        "wires": [
            [
                "75e8ab20bdccb8ad"
            ]
        ]
    },
    {
        "id": "f683fa9f427b3f09",
        "type": "inject",
        "z": "7ceb1d8.f3afee4",
        "name": "Query T3 power",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "cmnd/outlet/t3/Power",
        "payloadType": "str",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "036909ac4c8992bc",
        "type": "inject",
        "z": "7ceb1d8.f3afee4",
        "name": "Query T1 power",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "cmnd/outlet/t1/Power",
        "payloadType": "str",
        "x": 130,
        "y": 760,
        "wires": [
            [
                "8379de16.82ace"
            ]
        ]
    },
    {
        "id": "9c98634554a01427",
        "type": "mqtt in",
        "z": "bd3b7721fd58430a",
        "name": "",
        "topic": "zigbee2mqtt/pir/+",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "da444e7a1b9bc923"
            ]
        ]
    },
    {
        "id": "0d7db91debfe8f11",
        "type": "noraf-switch",
        "z": "bd3b7721fd58430a",
        "devicename": "Away Mode",
        "roomhint": "Hallway",
        "name": "",
        "passthru": true,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": false,
        "asyncCmd": false,
        "outputs": 1,
        "x": 450,
        "y": 200,
        "wires": [
            [
                "51b8a61f6c7b2bf7"
            ]
        ]
    },
    {
        "id": "51b8a61f6c7b2bf7",
        "type": "change",
        "z": "bd3b7721fd58430a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "away_mode",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7fb371e32ed98cd5",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "away_mode",
        "payloadType": "flow",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "0d7db91debfe8f11"
            ]
        ]
    },
    {
        "id": "da444e7a1b9bc923",
        "type": "function",
        "z": "bd3b7721fd58430a",
        "name": "When motion detected",
        "func": "const location = msg.topic.substr(msg.topic.lastIndexOf('/') + 1);\ncontext.set(location, msg.payload.occupancy);\n\nif (!flow.get('away_mode')) {\n    return;\n}\n\nif (msg.payload.occupancy) {\n    const now = new Date().toLocaleString();\n    return {\n        payload: {\n            title: 'Motion Detected',\n            body: `In ${location}, at: ${now}`,\n        },\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            [
                "b88d142b44255252"
            ]
        ],
        "outputLabels": [
            "battery low"
        ]
    },
    {
        "id": "b88d142b44255252",
        "type": "noraf-notify",
        "z": "bd3b7721fd58430a",
        "tag": "motion-detected",
        "title": "??",
        "body": "??",
        "icon": "",
        "name": "Motion Notification",
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "actions": [
            {
                "p": "Turn off",
                "v": "false",
                "vt": "bool",
                "d": false
            }
        ],
        "x": 630,
        "y": 80,
        "wires": [
            [
                "0d7db91debfe8f11"
            ]
        ]
    },
    {
        "id": "6c8b919f5f608a53",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "Turn on away mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "3",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "0d7db91debfe8f11"
            ]
        ]
    },
    {
        "id": "502a27aeb6327b61",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "Turn off away mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "3",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "0d7db91debfe8f11"
            ]
        ]
    },
    {
        "id": "e0e089bcc9576b96",
        "type": "mqtt in",
        "z": "bd3b7721fd58430a",
        "name": "",
        "topic": "zigbee2mqtt/pir/hallway_1",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 340,
        "wires": [
            [
                "cb5201d245ef0f2c"
            ]
        ]
    },
    {
        "id": "cb5201d245ef0f2c",
        "type": "function",
        "z": "bd3b7721fd58430a",
        "name": "When motion and dark",
        "func": "const now = new Date();\n\nif (msg.payload.occupancy &&\n    global.get('dark') &&\n    flow.get('auto_light') &&\n    !global.get('light/hallway')?.on) {\n    return {\n        payload: { state: 'ON' },\n        topic: 'zigbee2mqtt/light/hallway/set',\n    };\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "var  timer;\n",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 340,
        "wires": [
            [
                "27d661e8c21a058a"
            ]
        ],
        "outputLabels": [
            "battery low"
        ]
    },
    {
        "id": "6f3c322d6b5d8fb3",
        "type": "mqtt out",
        "z": "bd3b7721fd58430a",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 910,
        "y": 340,
        "wires": []
    },
    {
        "id": "19163ebae520d30d",
        "type": "mqtt in",
        "z": "bd3b7721fd58430a",
        "name": "",
        "topic": "zigbee2mqtt/pir/hallway_2",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 380,
        "wires": [
            [
                "cb5201d245ef0f2c"
            ]
        ]
    },
    {
        "id": "29324ba1a9182de4",
        "type": "mqtt in",
        "z": "bd3b7721fd58430a",
        "name": "",
        "topic": "zigbee2mqtt/light/hallway",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 440,
        "wires": [
            [
                "4d110fd70084348f"
            ]
        ]
    },
    {
        "id": "27d661e8c21a058a",
        "type": "trigger",
        "z": "bd3b7721fd58430a",
        "name": "debounce",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "nul",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 340,
        "wires": [
            [
                "e7f1f52c32467204"
            ]
        ]
    },
    {
        "id": "4d110fd70084348f",
        "type": "function",
        "z": "bd3b7721fd58430a",
        "name": "clear",
        "func": "if (msg.payload.state === 'OFF') {\n    return { payload: 'clear' };\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "27d661e8c21a058a"
            ]
        ]
    },
    {
        "id": "e7f1f52c32467204",
        "type": "trigger",
        "z": "bd3b7721fd58430a",
        "name": "",
        "op1": "",
        "op2": "{\"state\":\"OFF\"}",
        "op1type": "pay",
        "op2type": "json",
        "duration": "6",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "clear",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 770,
        "y": 340,
        "wires": [
            [
                "6f3c322d6b5d8fb3"
            ]
        ]
    },
    {
        "id": "946b585de665e3c8",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "",
        "payload": "{\"occupancy\":true}",
        "payloadType": "json",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "cb5201d245ef0f2c"
            ]
        ]
    },
    {
        "id": "6680f6fa94e9dd35",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "at specific time",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "40 20 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "0d2b2d300fef754d"
            ]
        ]
    },
    {
        "id": "0d2b2d300fef754d",
        "type": "function",
        "z": "bd3b7721fd58430a",
        "name": "when away, turn light on",
        "func": "if (flow.get('away_mode')) {\n    return [{\n        //office lamp\n        payload: 'ON',\n        topic: 'cmnd/outlet/t2/Power',\n    }, {\n        //wake light\n        payload: {\n            state: 'ON',\n        },\n        topic: 'zigbee2mqtt/relay/bedroom_wake/set',\n    }];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 520,
        "wires": [
            [
                "c97981c88c781654",
                "a55ef9b7ec1d9d29"
            ],
            [
                "c97981c88c781654",
                "8a3c5bcc9a778638"
            ]
        ],
        "outputLabels": [
            "battery low",
            ""
        ]
    },
    {
        "id": "a55ef9b7ec1d9d29",
        "type": "trigger",
        "z": "bd3b7721fd58430a",
        "name": "",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2.3",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 540,
        "wires": [
            [
                "c97981c88c781654"
            ]
        ]
    },
    {
        "id": "e0ca5c97879cec6a",
        "type": "mqtt out",
        "z": "bd3b7721fd58430a",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 970,
        "y": 500,
        "wires": []
    },
    {
        "id": "9c2173599da5c5df",
        "type": "noraf-switch",
        "z": "bd3b7721fd58430a",
        "devicename": "Auto light mode",
        "roomhint": "Hallway",
        "name": "",
        "passthru": true,
        "errorifstateunchaged": false,
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": false,
        "asyncCmd": false,
        "outputs": 1,
        "x": 380,
        "y": 660,
        "wires": [
            [
                "71ac0abb743dbd23"
            ]
        ]
    },
    {
        "id": "71ac0abb743dbd23",
        "type": "change",
        "z": "bd3b7721fd58430a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "auto_light",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "bfaabcc12a514c9d",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 17 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 640,
        "wires": [
            [
                "9c2173599da5c5df"
            ]
        ]
    },
    {
        "id": "1c5ce62cb3d01e67",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 170,
        "y": 680,
        "wires": [
            [
                "9c2173599da5c5df"
            ]
        ]
    },
    {
        "id": "32a38547e15789a1",
        "type": "inject",
        "z": "bd3b7721fd58430a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "auto_light",
        "payloadType": "flow",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "9c2173599da5c5df"
            ]
        ]
    },
    {
        "id": "c97981c88c781654",
        "type": "delay",
        "z": "bd3b7721fd58430a",
        "name": "",
        "pauseType": "random",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "40",
        "randomUnits": "minutes",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 780,
        "y": 500,
        "wires": [
            [
                "e0ca5c97879cec6a",
                "c0718d22327809e7"
            ]
        ]
    },
    {
        "id": "8a3c5bcc9a778638",
        "type": "trigger",
        "z": "bd3b7721fd58430a",
        "name": "",
        "op1": "",
        "op2": "{\"state\":\"OFF\"}",
        "op1type": "nul",
        "op2type": "json",
        "duration": "3",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 610,
        "y": 580,
        "wires": [
            [
                "c97981c88c781654"
            ]
        ]
    },
    {
        "id": "c0718d22327809e7",
        "type": "debug",
        "z": "bd3b7721fd58430a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 600,
        "wires": []
    },
    {
        "id": "0cd4f1385c4acbae",
        "type": "inject",
        "z": "4289ddd18011b400",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/outlet/t3/pulsetime",
        "payload": "116",
        "payloadType": "str",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "b7e4826693fc3fbc"
            ]
        ]
    },
    {
        "id": "b7e4826693fc3fbc",
        "type": "mqtt out",
        "z": "4289ddd18011b400",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "ffdb7ab8e24caa3a",
        "type": "inject",
        "z": "4289ddd18011b400",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/outlet/t3/pulsetime",
        "payload": "off",
        "payloadType": "str",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "b7e4826693fc3fbc"
            ]
        ]
    },
    {
        "id": "c53989ecfa9c42d2",
        "type": "mqtt in",
        "z": "4289ddd18011b400",
        "name": "",
        "topic": "stat/outlet/t3/RESULT",
        "qos": "2",
        "datatype": "json",
        "broker": "f569d34c.8c7ed",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 200,
        "wires": [
            [
                "a32c1a618f7c8359"
            ]
        ]
    },
    {
        "id": "a32c1a618f7c8359",
        "type": "function",
        "z": "4289ddd18011b400",
        "name": "when turned on, turn off after a few seconds",
        "func": "const prev = context.get('prev');\nconst powerOn = msg.payload.POWER === 'ON';\ncontext.set('prev', powerOn);\n\nif (powerOn && powerOn !== prev) {\n    let topic = msg.topic.split('/');\n    topic = topic.slice(1, topic.length - 1);\n    setTimeout(() => {\n        node.send({\n            payload: 'off',\n            topic: ['cmnd', ...topic, 'power'].join('/'),\n        });\n    }, 17000);\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 200,
        "wires": [
            [
                "3910ecc79e784aa4"
            ]
        ]
    },
    {
        "id": "3910ecc79e784aa4",
        "type": "mqtt out",
        "z": "4289ddd18011b400",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "f569d34c.8c7ed",
        "x": 710,
        "y": 200,
        "wires": []
    },
    {
        "id": "5cc7e798047cd148",
        "type": "inject",
        "z": "4289ddd18011b400",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "31 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmnd/outlet/t3/power",
        "payload": "on",
        "payloadType": "str",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "8750afb90a9573ae"
            ]
        ]
    },
    {
        "id": "8750afb90a9573ae",
        "type": "function",
        "z": "4289ddd18011b400",
        "name": "if auto feed dog is turned on",
        "func": "if (flow.get('auto-feed-dog')) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            [
                "b7e4826693fc3fbc"
            ]
        ]
    },
    {
        "id": "7826b59e484d0344",
        "type": "noraf-outlet",
        "z": "4289ddd18011b400",
        "devicename": "Auto Feed Dog",
        "roomhint": "Outside",
        "name": "",
        "passthru": false,
        "errorifstateunchaged": true,
        "nora": "f1e538c1.0315f8",
        "topic": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "offvalue": "false",
        "offvalueType": "bool",
        "twofactor": "ack",
        "twofactorpin": "",
        "filter": false,
        "asyncCmd": false,
        "outputs": 1,
        "x": 420,
        "y": 280,
        "wires": [
            [
                "8b09f3d5fe4676da"
            ]
        ]
    },
    {
        "id": "8b09f3d5fe4676da",
        "type": "change",
        "z": "4289ddd18011b400",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "auto-feed-dog",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 280,
        "wires": [
            []
        ]
    }
]